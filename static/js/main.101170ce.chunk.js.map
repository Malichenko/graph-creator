{"version":3,"sources":["bus/graph/types.js","bus/graph/reducer.js","init/rootReducer.js","init/middleware.js","init/store.js","bus/graph/components/header/styles/index.js","bus/graph/actions.js","bus/graph/hooks/useToggle/index.js","bus/graph/components/header/index.js","bus/graph/components/sideBar/styles/index.js","bus/graph/hooks/useForm/initialValues.js","bus/graph/hooks/useForm/index.js","bus/graph/hooks/useValidation/index.js","elements/customInput/index.js","bus/graph/components/sideBar/index.js","bus/graph/components/dashboard/graphConfig.js","bus/graph/components/dashboard/index.js","bus/graph/hooks/useGraph/index.js","bus/graph/index.js","App.js","serviceWorker.js","index.js"],"names":["types","Object","freeze","TOGGLE_SIDEBAR","ADD_NODE","SELECT_NODE","initialState","isOpen","data","links","source","target","nodes","id","color","selectedNode","filterData","arrey","tag","seen","Set","reverse","filter","el","duplicate","has","add","rootReducer","combineReducers","graph","state","type","payload","nodecolor","nodename","nodetarget","composeEnhancers","createLogger","duration","collapsed","colors","title","action","error","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","Header","styled","div","Title","BtnBlock","graphActions","toggleSideBar","value","addNode","selectNode","useToggle","dispatch","useDispatch","useSelector","batch","btnTitle","Container","fluid","Row","Col","sm","span","offset","Button","variant","onClick","SideBar","initialValues","useForm","useState","nodeName","setNodeName","filteredShape","map","shapeInitial","shape","validationSchema","Yup","required","oneOf","useValidation","setColor","useFormik","onSubmit","values","resetForm","getFieldProps","getFieldMeta","setValues","errors","isValid","handleSubmit","setFieldValue","useEffect","handleChangeComplete","hex","CustomInput","label","placeholder","name","onChange","onBlur","touched","errorJSX","Form","Control","Feedback","tooltip","Group","Label","htmlFor","InputGroup","autoComplete","isInvalid","onChangeComplete","disabled","graphConfigs","nodeHighlightBehavior","width","innerWidth","height","innerHeight","directed","maxZoom","minZoom","d3","alphaTarget","gravity","linkLength","linkStrength","disableLinkForce","node","size","highlightStrokeColor","labelPosition","fontColor","fontSize","fontWeight","highlightFontSize","link","highlightColor","Dashboard","onClickNode","nodeColor","find","nodeTarget","useGraph","config","Graph","className","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.101170ce.chunk.js","sourcesContent":["export const types = Object.freeze({\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  ADD_NODE: \"ADD_NODE\",\n  SELECT_NODE: \"SELECT_NODE\",\n});\n","// Types\nimport { types } from \"./types\";\n\nconst initialState = {\n  isOpen: false,\n  data: {\n    links: [\n      { source: \"Harry\", target: \"Sally\" },\n      { source: \"Alice\", target: \"Harry\" },\n      { source: \"Sally\", target: \"Alice\" },\n      { source: \"Mike\", target: \"Harry\" },\n      { source: \"John\", target: \"Harry\" },\n    ],\n    nodes: [\n      { id: \"Harry\", color: \"#FC0D1B\" },\n      { id: \"Alice\", color: \"#FEC1CC\" },\n      { id: \"Sally\", color: \"#000000\" },\n      { id: \"Mike\", color: \"#FD644E\" },\n      { id: \"John\", color: \"#0FFFFF\" },\n    ],\n  },\n  selectedNode: null,\n};\n\nconst filterData = (arrey, tag) => {\n  const seen = new Set();\n  const filteredArr = arrey.reverse().filter((el) => {\n    const duplicate = seen.has(el[tag]);\n    seen.add(el[tag]);\n    return !duplicate;\n  });\n  return filteredArr;\n};\n\nexport const graphReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.TOGGLE_SIDEBAR:\n      return {\n        ...state,\n        isOpen: payload,\n      };\n    case types.ADD_NODE:\n      const { nodecolor, nodename, nodetarget } = payload;\n\n      const nodes = [...state.data.nodes, { id: nodename, color: nodecolor }];\n\n      const links = [\n        ...state.data.links,\n        { source: nodename, target: nodetarget },\n      ];\n\n      return {\n        ...state,\n        data: {\n          nodes: filterData(nodes, \"id\"),\n          links: filterData(links, \"source\"),\n        },\n      };\n    case types.SELECT_NODE:\n      return {\n        ...state,\n        selectedNode: payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","// Core\nimport { combineReducers } from \"redux\";\n\n// Reducers\nimport { graphReducer as graph } from \"../bus/graph/reducer\";\n\nexport const rootReducer = combineReducers({\n  graph,\n});\n","// Core\nimport { compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nexport const logger = createLogger({\n  duration: true,\n  collapsed: true,\n  colors: {\n    title: (action) => {\n      return action.error ? \"firebrick\" : \"deepskyblue\";\n    },\n    prevState: () => \"#1C5FAF\",\n    action: () => \"#149945\",\n    nextState: () => \"#A47104\",\n    error: () => \"#ff0005\",\n  },\n});\n\nconst developmentEnvironment = process.env.NODE_ENV === \"development\";\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers =\n  developmentEnvironment && devtools ? devtools : compose;\n\nconst middleware = [thunk];\n\nif (developmentEnvironment) {\n  middleware.push(logger);\n}\n\nexport { composeEnhancers, middleware };\n","// Core\nimport { createStore, applyMiddleware } from \"redux\";\n\n// Other\nimport { rootReducer } from \"./rootReducer\";\nimport { middleware, composeEnhancers } from \"./middleware\";\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleware)),\n);\n","// Core\nimport styled from \"styled-components\";\n\nexport const Header = styled.div`\n  background-color: tomato;\n  padding: 10px 0;\n  border-bottom: 2px solid #000000;\n`;\n\nexport const Title = styled.div`\n  color: #f2f2f2;\n  display: flex;\n  width: 100%;\n  justify-content: center;\n`;\n\nexport const BtnBlock = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`;","// Types\nimport { types } from \"./types\";\n\nexport const graphActions = Object.freeze({\n  toggleSideBar: (value) => {\n    return {\n      type: types.TOGGLE_SIDEBAR,\n      payload: value,\n    };\n  },\n  addNode: (payload) => {\n    return {\n      type: types.ADD_NODE,\n      payload,\n    };\n  },\n  selectNode: (payload) => {\n    return {\n      type: types.SELECT_NODE,\n      payload,\n    };\n  },\n});\n","// Core\nimport { useDispatch, useSelector, batch } from \"react-redux\";\n\n// Actions\nimport { graphActions } from \"../../actions\";\n\nexport const useToggle = () => {\n  const dispatch = useDispatch();\n  const { isOpen } = useSelector((state) => state.graph);\n\n  const toggleSideBar = () => {\n    batch(() => {\n      dispatch(graphActions.selectNode(null));\n      dispatch(graphActions.toggleSideBar(!isOpen));\n    })\n    \n  };\n\n  return {\n    toggleSideBar,\n    isOpen,\n  };\n};\n","// Core\nimport React from \"react\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\n\n// Styled Components\nimport { Header as HeaderComponent, Title, BtnBlock } from \"./styles\";\n\n// Hooks\nimport { useToggle } from \"../../hooks/useToggle\";\n\nexport const Header = () => {\n  const { toggleSideBar, isOpen } = useToggle();\n\n  const btnTitle = !isOpen ? \"Add node\" : \"Close\";\n\n  return (\n    <HeaderComponent>\n      <Container fluid>\n        <Row>\n          <Col sm={{ span: 9, offset: 1 }}>\n            <Title>\n              <h3>Graph Creator</h3>\n            </Title>\n          </Col>\n          <Col sm={2}>\n            <BtnBlock>\n              <Button variant=\"primary\" onClick={toggleSideBar}>\n                {btnTitle}\n              </Button>\n            </BtnBlock>\n          </Col>\n        </Row>\n      </Container>\n    </HeaderComponent>\n  );\n};\n","// Core\nimport styled from \"styled-components\";\n\nexport const SideBar = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  min-height: 100vh !important;\n  z-index: 9999;\n  margin-top: 63px;\n  padding: 10px 15px;\n  box-shadow: inset -1px 0 0 rgba(0, 0, 0, 0.1);\n  border-left: 2px solid #000000;\n  background-color: #ffffff;\n`;\n","export const initialValues = Object.freeze({\n  nodename: \"\",\n  nodetarget: \"\",\n  nodecolor: \"#FD644E\",\n});\n","// Core\nimport { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { batch } from \"react-redux\";\n\n// Other\nimport { initialValues } from \"./initialValues\";\n\n// Actions\nimport { graphActions } from \"../../actions\";\n\n// Hooks\nimport { useValidation } from \"../useValidation\";\n\nexport const useForm = () => {\n  const dispatch = useDispatch();\n  const { selectedNode } = useSelector((state) => state.graph);\n  const { validationSchema, setNodeName } = useValidation();\n  const [color, setColor] = useState(\"#FD644E\");\n\n  const loginSubmiting = (values) => {\n    resetForm();\n    batch(() => {\n      dispatch(graphActions.selectNode(null));\n      dispatch(graphActions.addNode(values));\n    });\n  };\n\n  const {\n    getFieldProps,\n    getFieldMeta,\n    setValues,\n    values,\n    errors,\n    isValid,\n    handleSubmit,\n    setFieldValue,\n    resetForm,\n  } = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: loginSubmiting,\n  });\n\n  const handleChangeComplete = ({ hex }) => {\n    resetForm();\n    setColor(hex);\n    setFieldValue(\"nodecolor\", hex);\n  };\n\n  useEffect(() => {\n    if (selectedNode) {\n      setValues(selectedNode);\n      setColor(selectedNode.nodecolor);\n    } else {\n      setValues(initialValues);\n      setColor(initialValues.nodecolor);\n    }\n  }, [setValues, selectedNode]);\n\n  useEffect(() => {\n    if (values && values.nodename) {\n      setNodeName(values.nodename);\n    }\n  }, [setNodeName, values]);\n\n  return {\n    getFieldProps,\n    getFieldMeta,\n    errors,\n    isValid,\n    handleSubmit,\n    setFieldValue,\n    color,\n    handleChangeComplete,\n    values,\n  };\n};\n","// Core\nimport { useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\n\nexport const useValidation = () => {\n  const { data } = useSelector((state) => state.graph);\n  const [nodeName, setNodeName] = useState(\"\");\n\n  const filteredShape =\n    nodeName &&\n    data.links\n      .filter((el) => el.target !== nodeName && el.source !== nodeName)\n      .map(({ source }) => source);\n\n  const shapeInitial = data.nodes.map(({ id }) => id);\n\n  const shape = filteredShape || shapeInitial;\n\n  const validationSchema = Yup.object().shape({\n    nodename: Yup.string().required(\"Node name is required\"),\n    nodetarget: Yup.string()\n      .oneOf(shape, `Should be one of ${[...shape]}`)\n      .required(\"Node target is required\"),\n  });\n\n  return {\n    validationSchema,\n    setNodeName,\n  };\n};\n","// Core\nimport React from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\nexport const CustomInput = ({\n  label,\n  type,\n  placeholder,\n  name,\n  onChange,\n  onBlur,\n  value = \"\",\n  error,\n  touched,\n}) => {\n  const errorJSX = error && touched && (\n    <Form.Control.Feedback type=\"invalid\" tooltip>\n      {error}\n    </Form.Control.Feedback>\n  );\n\n  return (\n    <>\n      <Form.Group>\n        <Form.Label htmlFor={name}>{label}</Form.Label>\n        <InputGroup>\n          <Form.Control\n            type={type}\n            placeholder={placeholder}\n            name={name}\n            id={name}\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n            autoComplete=\"off\"\n            isInvalid={error && touched}\n          />\n          {errorJSX}\n        </InputGroup>\n      </Form.Group>\n    </>\n  );\n};\n","// Core\nimport React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { SketchPicker } from \"react-color\";\n\n// Styles Components\nimport { SideBar as SideBarComponent } from \"./styles\";\n\n// Hooks\nimport { useToggle } from \"../../hooks/useToggle\";\nimport { useForm } from \"../../hooks/useForm\";\n\n// Elements\nimport { CustomInput } from \"../../../../elements/customInput\";\n\nexport const SideBar = () => {\n  const { isOpen } = useToggle();\n  const {\n    getFieldProps,\n    getFieldMeta,\n    errors,\n    isValid,\n    handleSubmit,\n    color,\n    handleChangeComplete,\n  } = useForm();\n\n  const sidebarJSX = isOpen && (\n    <SideBarComponent>\n      <form onSubmit={handleSubmit}>\n        <CustomInput\n          label=\"Node Name\"\n          type=\"text\"\n          placeholder=\"Write Name\"\n          error={errors.nodename}\n          {...getFieldProps(\"nodename\")}\n          {...getFieldMeta(\"nodename\")}\n        />\n        <CustomInput\n          label=\"Node Target\"\n          type=\"text\"\n          placeholder=\"Write Target\"\n          error={errors.nodetarget}\n          {...getFieldProps(\"nodetarget\")}\n          {...getFieldMeta(\"nodetarget\")}\n        />\n        <Form.Group>\n          <Form.Label>Node color</Form.Label>\n          <SketchPicker color={color} onChangeComplete={handleChangeComplete} />\n        </Form.Group>\n        <Button type=\"submit\" disabled={!isValid}>\n          Save\n        </Button>\n      </form>\n    </SideBarComponent>\n  );\n\n  return sidebarJSX;\n};\n","export const graphConfigs = Object.freeze({\n  nodeHighlightBehavior: true,\n  width: window.innerWidth,\n  height: window.innerHeight,\n  directed: true,\n  maxZoom: 1,\n  minZoom: 1,\n  d3: {\n    alphaTarget: 0.05,\n    gravity: -200,\n    linkLength: 200,\n    linkStrength: 2,\n    disableLinkForce: false,\n  },\n  node: {\n    color: \"tomato\",\n    size: 2000,\n    highlightStrokeColor: \"black\",\n    labelPosition: \"center\",\n    fontColor: \"white\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n    highlightFontSize: 16,\n  },\n  link: {\n    highlightColor: \"black\",\n  },\n});\n","// Core\nimport React from \"react\";\nimport { Graph as GraphComponent } from \"react-d3-graph\";\n\n// Other\nimport { graphConfigs } from \"./graphConfig\";\n\n// Hooks\nimport { useGraph } from \"../../hooks/useGraph\";\n\nexport const Dashboard = () => {\n  const { onClickNode, data } = useGraph();\n  return (\n    <GraphComponent\n      id=\"graph-id\"\n      data={data}\n      config={graphConfigs}\n      onClickNode={onClickNode}\n    />\n  );\n};\n","// Core\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// Actions\nimport { graphActions } from \"../../actions\";\n\nexport const useGraph = () => {\n  const dispatch = useDispatch();\n  const { data } = useSelector((state) => state.graph);\n\n  const onClickNode = (nodeName) => {\n    const nodeColor = data.nodes.find((el) => el.id === nodeName);\n    const nodeTarget = data.links.find((el) => el.source === nodeName);\n    dispatch(\n      graphActions.selectNode({\n        nodename: nodeName,\n        nodetarget: nodeTarget.target,\n        nodecolor: nodeColor.color,\n      }),\n    );\n\n    dispatch(graphActions.toggleSideBar(true));\n  };\n\n  return {\n    data,\n    onClickNode,\n  };\n};\n","// Core\nimport React from \"react\";\n\n// Components\nimport { Header } from \"./components/header\";\nimport { SideBar } from \"./components/sideBar\";\nimport { Dashboard } from \"./components/dashboard\";\n\nexport const Graph = () => {\n  return (\n    <div className=\"graph\">\n      <Header />\n      <SideBar />\n      <Dashboard />\n    </div>\n  );\n};\n","// Core\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\n\n// Other\nimport { store } from \"./init/store\";\n\n// Components\nimport { Graph } from \"./bus/graph\";\n\nexport const App = () => {\n  return (\n    <Provider store={store}>\n      <Graph />\n    </Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Styles\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}